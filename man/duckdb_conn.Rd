% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/duckdb_conn.R
\name{duckdb_conn}
\alias{duckdb_conn}
\title{Connexion duckdb}
\description{
Cette classe représente une connexion duckdb et permet de travailler avec
l'attribut 'conn'
}
\examples{
# Crée une connexion
db = duckdb_conn$new()
# Utilise la connexion
tbl(db$conn, sql("select 42 as value"))
# Teste connection
db$is_connected()
# Déconnexion
# Note : db n'est pas supprimé et db$conn créera une nouvelle connexion
# avec les mêmes paramètres
db$disconnect()
# Teste connection
db$is_connected()
# Utilise à nouveau la connexion
tbl(db$conn, sql("select 44 as value"))
# Teste connection
db$is_connected()
db$disconnect()
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{ext}}{Extensions chargées}

\item{\code{dbdir}}{Nom de la base duckdb}

\item{\code{conn}}{Connexion duckdb}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-duckdb_conn-new}{\code{duckdb_conn$new()}}
\item \href{#method-duckdb_conn-print}{\code{duckdb_conn$print()}}
\item \href{#method-duckdb_conn-is_connected}{\code{duckdb_conn$is_connected()}}
\item \href{#method-duckdb_conn-connect_new}{\code{duckdb_conn$connect_new()}}
\item \href{#method-duckdb_conn-disconnect}{\code{duckdb_conn$disconnect()}}
\item \href{#method-duckdb_conn-clone}{\code{duckdb_conn$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-duckdb_conn-new"></a>}}
\if{latex}{\out{\hypertarget{method-duckdb_conn-new}{}}}
\subsection{Method \code{new()}}{
Crée un objet 'duckdb_conn'
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{duckdb_conn$new(ext = "none", dbdir = ":memory:")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ext}}{Extensions chargées 'core': httpfs+spatial, 'geo': core+h3
'none' = pas d'extension. 'none' par défaut}

\item{\code{dbdir}}{Nom du la base duckdb, par défaut base stockée en mémoire}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Un objet 'duckdb_conn'
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-duckdb_conn-print"></a>}}
\if{latex}{\out{\hypertarget{method-duckdb_conn-print}{}}}
\subsection{Method \code{print()}}{
Fonction 'print' dédiée
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{duckdb_conn$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Inutilisé}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-duckdb_conn-is_connected"></a>}}
\if{latex}{\out{\hypertarget{method-duckdb_conn-is_connected}{}}}
\subsection{Method \code{is_connected()}}{
Connexion valide ?
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{duckdb_conn$is_connected()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TRUE/FALSE
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-duckdb_conn-connect_new"></a>}}
\if{latex}{\out{\hypertarget{method-duckdb_conn-connect_new}{}}}
\subsection{Method \code{connect_new()}}{
Renouvelle la connexion sans changer de duckdb_conn
Attention: toutes les tables en mémoire sont perdues
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{duckdb_conn$connect_new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-duckdb_conn-disconnect"></a>}}
\if{latex}{\out{\hypertarget{method-duckdb_conn-disconnect}{}}}
\subsection{Method \code{disconnect()}}{
Déconnecte la connexion courante. Une nouvelle connexion sera créée
au prochain appel de '$conn'
Attention: toutes les tables en mémoire sont perdues
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{duckdb_conn$disconnect()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-duckdb_conn-clone"></a>}}
\if{latex}{\out{\hypertarget{method-duckdb_conn-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{duckdb_conn$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
