% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_duckdb_parquet.R
\name{write_duckdb_parquet}
\alias{write_duckdb_parquet}
\title{Écrit fichier parquet depuis une table duckdb}
\usage{
write_duckdb_parquet(
  conn,
  name = NULL,
  filename = NULL,
  dir = ".",
  partition = NULL,
  order_by = NULL,
  verbose = FALSE
)
}
\arguments{
\item{conn}{: connexion duckdb}

\item{name}{: nom de la table}

\item{filename}{: nom du fichier ou répertoire si partition est renseigné, par défaut \code{name}}

\item{dir}{: répertoire de sortie, éventuellement s3}

\item{partition}{: chaine de la forme "var1, var2" pour créer une partition, pas de partition par défaut}

\item{order_by}{: ordre éventuel de sortie sous forme de vecteur character}

\item{verbose}{: indique la requete SQL générée}
}
\value{
nom du fichier/répertoire
}
\description{
Écrit fichier parquet depuis une table duckdb
}
\examples{
s3expl = "s3://insee/sern-div-exploitations-statistiques-rp/ear_rp"
# Fichier simple ear_fam.parquet dasn répertoire dir sous s3
outfile = write_duckdb_parquet(conn = conn, name="ear_fam", dir = s3expl)
# Fichier simple ear_fam.parquet trié dans répertoire courant
outfile = write_duckdb_parquet(conn = conn, name="ear_fam", order_by=c("var1", "var2"))
# Fichier partitionné dans répertoire test_fam
outfile = write_duckdb_parquet(conn, name="ear_fam",  dir = s3expl,
  filename="test_fam", partition="c_annee_col", verbose=T)
}
